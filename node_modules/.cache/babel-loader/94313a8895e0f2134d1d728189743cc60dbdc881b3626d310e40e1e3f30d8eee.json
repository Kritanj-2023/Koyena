{"ast":null,"code":"// import React, { useEffect,useMemo,useState } from 'react'\n// import {Center, Spinner, Heading, Table, Tbody, Td, Th, Thead, Tr} from \"@chakra-ui/react\"\n// import axios from \"axios\"\n// import {useTable} from 'react-table'\n// const url = \"https://fakestoreapi.com/products\";\n\n// const fetchData = [\n//   {\n//     \"id\":1,\n//     \"title\":\"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\",\"price\":109.95,\n//     \"description\":\"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\n//     \"category\":\"men's clothing\",\n//     \"image\":\"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\",\n//     \"rating\":{\n//       \"rate\":3.9,\n//       \"count\":120\n//     },\n//   }\n// ]\n\n// const tableColumn = [\n//   {\n//     Header: \"ID\",\n//     accessor : \"id \"\n//   },\n//   {\n//     Header: \"TITLE\",\n//     accessor : \"title \"\n//   },\n//   {\n//     Header: \"DESCRIPTION\",\n//     accessor : \"description\"\n//   },\n//   {\n//     Header: \"CATEGORY\",\n//     accessor : \"category \"\n//   },\n//   {\n//     Header: \"IMAGE\",\n//     accessor : \"image\"\n//   }\n// ]\n\n// const Problem = () => {\n//   const [products,setProducts] = useState([]);\n//   const columns = useMemo(()=>tableColumn,[])\n//   const data = useMemo(()=>products,[products])\n//   const {\n//     getTableProps,getTableBodyProps,headerGroups,rows,prepareRow\n//   } = useTable({\n//     columns: columns,\n//     data: data,\n//   })\n\n//   useEffect(()=>{\n//     const fetchProducts = async () =>{\n//       try{\n//         const {data} = await axios.get(url);\n//         setProducts(data);\n//       }\n//       catch(error){\n//         console.log(error);\n//       }\n//     };\n//     fetchProducts();\n//   },[])\n//   console.log(products);\n//   if(products.length === 0) return (\n//     <Center>\n//       <Spinner/>\n//     </Center>\n//   );\n//   return (\n//     <>\n//       <Heading>Table</Heading>\n//       <Table variant = 'striped' colorScheme='orange' {...getTableProps()}>\n//         <Thead>\n//           {\n//             headerGroups.map((headerGroups)=>(\n//               <Tr{...headerGroups.getHeaderGroupProps()}>\n//                 {headerGroups.headers.map((column)=>(\n//                   <Th {...column.getHeaderProps()}>\n//                     {column.render(\"Header\")}\n//                   </Th>\n//                 ))}\n//               </Tr>\n//             ))\n//           }\n//         </Thead>\n//         <Tbody {...getTableBodyProps()}>\n//           {\n//             rows.map((row,i) => {\n//               prepareRow(row);\n//               return(\n//                 <Tr {...row.getRowProps()}>\n//                   {row.cells.map((cell)=>(\n//                     <Td {...cell.getCellProps()}>\n//                       {cell.render(\"Cell\")}\n//                     </Td>\n//                   ))}\n//                 </Tr>\n//               )\n//             })\n//           }\n//         </Tbody>\n//       </Table>\n//     </>\n//   )\n// }\n\n// export default Problem","map":{"version":3,"names":[],"sources":["C:/Users/user/OneDrive/coding/Web_Development/NITLINK/src/components/Problem.js"],"sourcesContent":["// import React, { useEffect,useMemo,useState } from 'react'\r\n// import {Center, Spinner, Heading, Table, Tbody, Td, Th, Thead, Tr} from \"@chakra-ui/react\"\r\n// import axios from \"axios\"\r\n// import {useTable} from 'react-table'\r\n// const url = \"https://fakestoreapi.com/products\";\r\n\r\n// const fetchData = [\r\n//   {\r\n//     \"id\":1,\r\n//     \"title\":\"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\",\"price\":109.95,\r\n//     \"description\":\"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\r\n//     \"category\":\"men's clothing\",\r\n//     \"image\":\"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\",\r\n//     \"rating\":{\r\n//       \"rate\":3.9,\r\n//       \"count\":120\r\n//     },\r\n//   }\r\n// ]\r\n\r\n// const tableColumn = [\r\n//   {\r\n//     Header: \"ID\",\r\n//     accessor : \"id \"\r\n//   },\r\n//   {\r\n//     Header: \"TITLE\",\r\n//     accessor : \"title \"\r\n//   },\r\n//   {\r\n//     Header: \"DESCRIPTION\",\r\n//     accessor : \"description\"\r\n//   },\r\n//   {\r\n//     Header: \"CATEGORY\",\r\n//     accessor : \"category \"\r\n//   },\r\n//   {\r\n//     Header: \"IMAGE\",\r\n//     accessor : \"image\"\r\n//   }\r\n// ]\r\n\r\n// const Problem = () => {\r\n//   const [products,setProducts] = useState([]);\r\n//   const columns = useMemo(()=>tableColumn,[])\r\n//   const data = useMemo(()=>products,[products])\r\n//   const {\r\n//     getTableProps,getTableBodyProps,headerGroups,rows,prepareRow\r\n//   } = useTable({\r\n//     columns: columns,\r\n//     data: data,\r\n//   })\r\n\r\n//   useEffect(()=>{\r\n//     const fetchProducts = async () =>{\r\n//       try{\r\n//         const {data} = await axios.get(url);\r\n//         setProducts(data);\r\n//       }\r\n//       catch(error){\r\n//         console.log(error);\r\n//       }\r\n//     };\r\n//     fetchProducts();\r\n//   },[])\r\n//   console.log(products);\r\n//   if(products.length === 0) return (\r\n//     <Center>\r\n//       <Spinner/>\r\n//     </Center>\r\n//   );\r\n//   return (\r\n//     <>\r\n//       <Heading>Table</Heading>\r\n//       <Table variant = 'striped' colorScheme='orange' {...getTableProps()}>\r\n//         <Thead>\r\n//           {\r\n//             headerGroups.map((headerGroups)=>(\r\n//               <Tr{...headerGroups.getHeaderGroupProps()}>\r\n//                 {headerGroups.headers.map((column)=>(\r\n//                   <Th {...column.getHeaderProps()}>\r\n//                     {column.render(\"Header\")}\r\n//                   </Th>\r\n//                 ))}\r\n//               </Tr>\r\n//             ))\r\n//           }\r\n//         </Thead>\r\n//         <Tbody {...getTableBodyProps()}>\r\n//           {\r\n//             rows.map((row,i) => {\r\n//               prepareRow(row);\r\n//               return(\r\n//                 <Tr {...row.getRowProps()}>\r\n//                   {row.cells.map((cell)=>(\r\n//                     <Td {...cell.getCellProps()}>\r\n//                       {cell.render(\"Cell\")}\r\n//                     </Td>\r\n//                   ))}\r\n//                 </Tr>\r\n//               )\r\n//             })\r\n//           }\r\n//         </Tbody>\r\n//       </Table>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Problem"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}